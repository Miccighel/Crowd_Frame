/* ======================================================================
   DIMENSION COMPONENT STYLES (integrated, grid-aligned matrix)
   ----------------------------------------------------------------------
   - Matrix: rows = dimensions, columns = mappings; first TWO columns fixed.
   ====================================================================== */

/* ─────────────────────────────────────────────────────────────
   Base dimension block
   ───────────────────────────────────────────────────────────── */
.dimension {
    margin-top: 1.4em;

    h2 {
        font-weight: normal;
        margin: 0 0 6px 0;
        text-align: center;
    }

    mat-form-field {
        width: 100%;
    }

    /* Only stack groups that explicitly opt-in via this helper.
       Matrix uses CSS grid, so do NOT style all mat-radio-group globally. */
    .radio-button-group {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        justify-content: flex-start;
        width: 100%;
        margin: 0;
    }

    .checkbox {
        margin: 0;
        padding: 0;

        mat-checkbox {
            float: left;
            margin-right: 1%;
        }
    }
}

/* Hide MDC internals inside the checkbox container (scoped) */
::ng-deep .dimension .checkbox .mat-mdc-form-field-infix,
::ng-deep .dimension .checkbox .mat-mdc-form-field-flex,
::ng-deep .dimension .checkbox .mat-mdc-form-field-underline {
    display: none;
}

::ng-deep .dimension .checkbox .mat-mdc-form-field-wrapper {
    padding: 0;
}

/* ─────────────────────────────────────────────────────────────
   Containers and content blocks
   ───────────────────────────────────────────────────────────── */
.dimension-container {
    display: flex;
    align-items: stretch;
    width: 100%;
}

.dimension-content {
    flex: 1 1 auto;
    width: 100%;
    text-align: left;
}

.dimension-name {
    margin-bottom: 8px;
}

.dimension-description {
    margin-bottom: 8px;

    p {
        margin: 6px 0 0 0;
    }

    .dimension-example {
        display: block;
        margin-top: 6px;
        opacity: 0.9;
    }
}

.dimension-scale {
    margin-bottom: 12px;
}

.dimension-url {
    margin-bottom: 12px;
}

/* optional hook for label spans inside radios */
.mapping-label {
}

/* ─────────────────────────────────────────────────────────────
   Interval scale specifics
   ───────────────────────────────────────────────────────────── */
.scale-interval {
    span { /* keep Material sizes */
    }

    mat-slider {
        width: 100%;
    }
}

/* ─────────────────────────────────────────────────────────────
   MATRIX — grid-aligned, 2 fixed text columns + N mapping columns
   ----------------------------------------------------------------
   Template sets:
     --cols     = number of mapping columns (from headerDim)
     --col-name = width of name column (e.g., 180px)
     --col-desc = width of description column (e.g., 320px)
   ---------------------------------------------------------------- */

.dimension-matrix-single {
    border: 2px solid lightgray;
    border-radius: 8px;
    padding: 10px;
    margin-bottom: 10em;
}

.dimension-matrix-multiple,
.dimension-matrix-container {
    margin-bottom: 1em;
}

/* Core grid: [name][desc][map1][map2]... */
.matrix-grid {
    display: grid;
    grid-template-columns:
    var(--col-name, 180px)
    var(--col-desc, 320px)
    repeat(var(--cols), 1fr);
    align-items: center;
    column-gap: 8px;
    row-gap: 6px;

    /* include fixed columns so grid doesn’t squash */
    min-width: calc(var(--col-name, 180px) + var(--col-desc, 320px) + (var(--cols) * 120px));
}

/* Generic cell container */
.matrix-cell {
    display: flex;
    align-items: center;
    justify-content: center;

    /* make long strings wrap nicely in text columns */
    overflow-wrap: anywhere;
    word-break: break-word;
    hyphens: auto;
}

/* Header spacing */
.matrix-header {
    margin-bottom: 8px;
}

/* Header cells: center labels/desc, allow multi-line */
.matrix-header-cell {
    text-align: center;
    flex-direction: column;
}

/* Two empty header stubs matching the first two fixed columns */
.matrix-stub {
    justify-content: flex-start;
}

/* First fixed column: Name (left aligned) */
.matrix-name {
    justify-content: flex-start;
    text-align: left;

    p {
        margin: 0;
    }
}

/* Second fixed column: Description / Example (left aligned, wraps) */
.matrix-desc {
    justify-content: flex-start;
    text-align: left;

    .description-sub {
        padding: 5px 10px 3px 0;
    }

    .description-sub p {
        margin-top: 0;
    }
}

/* Mapping cells: radios centered by parent .matrix-cell */
.matrix-value-control {
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Remove MDC label spacing (even when label is empty) */
.matrix-value-control .mat-mdc-radio-button .mdc-form-field {
    gap: 0;
}

.matrix-value-control .mat-mdc-radio-button .mdc-form-field > label {
    margin: 0 !important;
    padding: 0;
    width: 0;
    overflow: hidden; /* keep DOM for a11y, but no layout */
}

/* Ensure the radio itself doesn't introduce margins */
.matrix-value-control .mat-mdc-radio-button {
    margin: 0;
}

.matrix-value-control .mat-mdc-radio-button .mdc-radio {
    margin: 0 auto;
}

/* Placeholder to keep grid width when a row has fewer options */
.matrix-placeholder {
    display: inline-block;
    width: 20px;
    height: 20px;
}

/* Row divider that spans the whole grid (added when style.separator = true) */
.matrix-row-separator {
    grid-column: 1 / -1; /* span across all columns */
    margin: 8px 0 4px 0; /* space above/below the divider */
}

.matrix-row-separator mat-divider {
    width: 100%;
}

/* Normalize paragraph spacing inside matrix cells */
.dimension-matrix p {
    margin-bottom: 0;
}

/* Legacy helpers kept */
.dimension-matrix .matrix-header .matrix-header-value,
.dimension-matrix .matrix-header .matrix-header-text {
    position: relative;
    right: 5px;
    text-align: center;
}

/* ─────────────────────────────────────────────────────────────
   Pairwise (subdocuments)
   ───────────────────────────────────────────────────────────── */
.dimension-name-center {
    text-align: center;
    margin-bottom: 10px;
    margin-top: 10px;
}

/* Two equal columns for A/B */
.dimension-content-split {
    display: grid;
    grid-template-columns: repeat(2, minmax(280px, 1fr));
    gap: 16px;
    width: 100%;
    margin-bottom: 20px;
    justify-items: stretch;
    align-items: start;
}

.pairwise-columns {
    background: #fafafa;
    padding: 12px;
    border-radius: 8px;
}

.pairwise-col-surface {
    background: none;
    border: none;
    border-radius: 0;
    padding: 10px 12px;
    width: 100%;
    justify-self: stretch;
}

.pairwise-column-title {
    text-align: center;
    margin: -2px 0 2px 0;
}

.dimension-split-inside {
    display: flex;
    flex-direction: column;
    gap: 8px;
    margin: 0;
    width: 100%;
}

.dimension-box {
    border-radius: 0;
    background: none;
    box-shadow: none;
    cursor: default;

    p {
        margin: 0 0 6px 0;
        font-weight: 500;
        text-align: left;
    }
}

.pairwise-inline-label {
    display: inline-block;
    margin: 0 0 6px 0;
}

/* Optional counter column */
.dimension-counter {
    flex-grow: 0;
    flex-basis: 1%;
    justify-content: center;
    align-self: center;
    vertical-align: top;
    margin-right: 1%;
}

/* ─────────────────────────────────────────────────────────────
   Pointwise (non-pairwise) overrides — left-aligned instructions
   ───────────────────────────────────────────────────────────── */
.dimension.dimension--pointwise .evaluation-instructions {
    text-align: left;
}

.dimension.dimension--pointwise .evaluation-instructions h2 {
    text-align: left;
}

.dimension.dimension--pointwise .evaluation-instructions-body {
    max-width: none;
    margin: 0;
    text-align: left;
}

/* ─────────────────────────────────────────────────────────────
   Validation errors — consistent look & spacing
   ───────────────────────────────────────────────────────────── */
.dimension .mat-mdc-form-field-subscript-wrapper {
    min-height: 20px; /* reserve space; prevent jump */
}

.dimension mat-error {
    display: block;
    margin: 6px 0 0;
}

.dimension .radio-button-group + mat-error,
.dimension .scale-interval + mat-error,
.dimension .dimension-text-field + mat-error {
    margin-top: 8px;
}

.pairwise-col-surface mat-error {
    text-align: left;
}

.dimension mat-error br + span {
    margin-top: 0;
    display: inline-block;
}

/* ─────────────────────────────────────────────────────────────
   Categorical radios — slightly larger labels (scoped)
   ---------------------------------------------------------------- */
.dimension .radio-button-group .mat-mdc-radio-button .mdc-label,
.dimension .radio-button-group .mapping-label,
.dimension .matrix-row .mat-mdc-radio-button .mdc-label {
    font-size: 1.06rem; /* ~+6% bump */
    line-height: 1.35; /* better multi-line wrapping */
}

/* Mobile: keep the bump but a touch tighter for space */
@media (max-width: 599px) {
    .dimension .radio-button-group .mat-mdc-radio-button .mdc-label,
    .dimension .radio-button-group .mapping-label,
    .dimension .matrix-row .mat-mdc-radio-button .mdc-label {
        font-size: 1.04rem;
        line-height: 1.32;
    }
}

/* ─────────────────────────────────────────────────────────────
   Responsive tweaks
   ───────────────────────────────────────────────────────────── */
@media (max-width: 599px) {
    .dimension-content-split {
        grid-template-columns: 1fr;
    }

    .matrix-grid {
        min-width: calc(var(--col-name, 160px) + var(--col-desc, 260px) + (var(--cols) * 100px));
        column-gap: 6px;
    }

    .pairwise-columns {
        padding: 10px;
        border-radius: 6px;
    }
    .pairwise-col-surface {
        padding: 8px 10px;
    }
}
